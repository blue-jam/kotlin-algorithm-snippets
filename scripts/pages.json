[{"name":"class Factory(val mod: Long)","description":"blue.bluejam.algorithms.kotlin.math.ModInt.Factory","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math/-mod-int/-factory/index.html","searchKeys":["Factory","class Factory(val mod: Long)","blue.bluejam.algorithms.kotlin.math.ModInt.Factory"]},{"name":"class Graph<T : Comparable<T>>(val n: Int, val zero: T, val inf: T, val plus: (T, T) -> T)","description":"blue.bluejam.algorithms.kotlin.graph.Graph","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.graph/-graph/index.html","searchKeys":["Graph","class Graph<T : Comparable<T>>(val n: Int, val zero: T, val inf: T, val plus: (T, T) -> T)","blue.bluejam.algorithms.kotlin.graph.Graph"]},{"name":"class ModCombination(val n: Long, factory: ModInt.Factory)","description":"blue.bluejam.algorithms.kotlin.math.combinatorics.ModCombination","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math.combinatorics/-mod-combination/index.html","searchKeys":["ModCombination","class ModCombination(val n: Long, factory: ModInt.Factory)","blue.bluejam.algorithms.kotlin.math.combinatorics.ModCombination"]},{"name":"class ModInt","description":"blue.bluejam.algorithms.kotlin.math.ModInt","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math/-mod-int/index.html","searchKeys":["ModInt","class ModInt","blue.bluejam.algorithms.kotlin.math.ModInt"]},{"name":"class SegmentTree<T>(n: Int, val e: T, val op: (T, T) -> T)","description":"blue.bluejam.algorithms.kotlin.datastructure.SegmentTree","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.datastructure/-segment-tree/index.html","searchKeys":["SegmentTree","class SegmentTree<T>(n: Int, val e: T, val op: (T, T) -> T)","blue.bluejam.algorithms.kotlin.datastructure.SegmentTree"]},{"name":"class SieveOfEratosthenes(n: Long)","description":"blue.bluejam.algorithms.kotlin.math.SieveOfEratosthenes","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math/-sieve-of-eratosthenes/index.html","searchKeys":["SieveOfEratosthenes","class SieveOfEratosthenes(n: Long)","blue.bluejam.algorithms.kotlin.math.SieveOfEratosthenes"]},{"name":"class SuffixArray(val s: String)","description":"blue.bluejam.algorithms.kotlin.string.SuffixArray","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.string/-suffix-array/index.html","searchKeys":["SuffixArray","class SuffixArray(val s: String)","blue.bluejam.algorithms.kotlin.string.SuffixArray"]},{"name":"class UnionFind(n: Int)","description":"blue.bluejam.algorithms.kotlin.datastructure.UnionFind","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.datastructure/-union-find/index.html","searchKeys":["UnionFind","class UnionFind(n: Int)","blue.bluejam.algorithms.kotlin.datastructure.UnionFind"]},{"name":"data class Edge<T : Comparable<T>>(val from: Int, val to: Int, val weight: T) : Comparable<Edge<T>> ","description":"blue.bluejam.algorithms.kotlin.graph.Edge","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.graph/-edge/index.html","searchKeys":["Edge","data class Edge<T : Comparable<T>>(val from: Int, val to: Int, val weight: T) : Comparable<Edge<T>> ","blue.bluejam.algorithms.kotlin.graph.Edge"]},{"name":"fun <T : Comparable<T>> Edge(from: Int, to: Int, weight: T)","description":"blue.bluejam.algorithms.kotlin.graph.Edge.Edge","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.graph/-edge/-edge.html","searchKeys":["Edge","fun <T : Comparable<T>> Edge(from: Int, to: Int, weight: T)","blue.bluejam.algorithms.kotlin.graph.Edge.Edge"]},{"name":"fun <T : Comparable<T>> Edge(from: Long, to: Long, weight: T)","description":"blue.bluejam.algorithms.kotlin.graph.Edge.Edge","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.graph/-edge/-edge.html","searchKeys":["Edge","fun <T : Comparable<T>> Edge(from: Long, to: Long, weight: T)","blue.bluejam.algorithms.kotlin.graph.Edge.Edge"]},{"name":"fun <T : Comparable<T>> Graph(n: Int, zero: T, inf: T, plus: (T, T) -> T)","description":"blue.bluejam.algorithms.kotlin.graph.Graph.Graph","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.graph/-graph/-graph.html","searchKeys":["Graph","fun <T : Comparable<T>> Graph(n: Int, zero: T, inf: T, plus: (T, T) -> T)","blue.bluejam.algorithms.kotlin.graph.Graph.Graph"]},{"name":"fun <T : Comparable<T>> findBridges(g: Graph<T>): Pair<Array<Edge<T>>, Array<TreeSet<Int>>>","description":"blue.bluejam.algorithms.kotlin.graph.findBridges","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.graph/find-bridges.html","searchKeys":["findBridges","fun <T : Comparable<T>> findBridges(g: Graph<T>): Pair<Array<Edge<T>>, Array<TreeSet<Int>>>","blue.bluejam.algorithms.kotlin.graph.findBridges"]},{"name":"fun <T : Comparable<T>> listRequiredVertices(g: Graph<T>, s: Int, t: Int): BooleanArray","description":"blue.bluejam.algorithms.kotlin.graph.listRequiredVertices","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.graph/list-required-vertices.html","searchKeys":["listRequiredVertices","fun <T : Comparable<T>> listRequiredVertices(g: Graph<T>, s: Int, t: Int): BooleanArray","blue.bluejam.algorithms.kotlin.graph.listRequiredVertices"]},{"name":"fun <T : Comparable<T>> topologicalSort(g: Graph<T>): Pair<Boolean, IntArray>","description":"blue.bluejam.algorithms.kotlin.graph.topologicalSort","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.graph/topological-sort.html","searchKeys":["topologicalSort","fun <T : Comparable<T>> topologicalSort(g: Graph<T>): Pair<Boolean, IntArray>","blue.bluejam.algorithms.kotlin.graph.topologicalSort"]},{"name":"fun <T> SegmentTree(n: Int, e: T, op: (T, T) -> T)","description":"blue.bluejam.algorithms.kotlin.datastructure.SegmentTree.SegmentTree","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.datastructure/-segment-tree/-segment-tree.html","searchKeys":["SegmentTree","fun <T> SegmentTree(n: Int, e: T, op: (T, T) -> T)","blue.bluejam.algorithms.kotlin.datastructure.SegmentTree.SegmentTree"]},{"name":"fun Factory(mod: Long)","description":"blue.bluejam.algorithms.kotlin.math.ModInt.Factory.Factory","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math/-mod-int/-factory/-factory.html","searchKeys":["Factory","fun Factory(mod: Long)","blue.bluejam.algorithms.kotlin.math.ModInt.Factory.Factory"]},{"name":"fun ModCombination(n: Long, factory: ModInt.Factory)","description":"blue.bluejam.algorithms.kotlin.math.combinatorics.ModCombination.ModCombination","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math.combinatorics/-mod-combination/-mod-combination.html","searchKeys":["ModCombination","fun ModCombination(n: Long, factory: ModInt.Factory)","blue.bluejam.algorithms.kotlin.math.combinatorics.ModCombination.ModCombination"]},{"name":"fun ModCombination(n: Long, mod: Long)","description":"blue.bluejam.algorithms.kotlin.math.combinatorics.ModCombination.ModCombination","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math.combinatorics/-mod-combination/-mod-combination.html","searchKeys":["ModCombination","fun ModCombination(n: Long, mod: Long)","blue.bluejam.algorithms.kotlin.math.combinatorics.ModCombination.ModCombination"]},{"name":"fun SieveOfEratosthenes(n: Long)","description":"blue.bluejam.algorithms.kotlin.math.SieveOfEratosthenes.SieveOfEratosthenes","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math/-sieve-of-eratosthenes/-sieve-of-eratosthenes.html","searchKeys":["SieveOfEratosthenes","fun SieveOfEratosthenes(n: Long)","blue.bluejam.algorithms.kotlin.math.SieveOfEratosthenes.SieveOfEratosthenes"]},{"name":"fun SuffixArray(s: String)","description":"blue.bluejam.algorithms.kotlin.string.SuffixArray.SuffixArray","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.string/-suffix-array/-suffix-array.html","searchKeys":["SuffixArray","fun SuffixArray(s: String)","blue.bluejam.algorithms.kotlin.string.SuffixArray.SuffixArray"]},{"name":"fun UnionFind(n: Int)","description":"blue.bluejam.algorithms.kotlin.datastructure.UnionFind.UnionFind","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.datastructure/-union-find/-union-find.html","searchKeys":["UnionFind","fun UnionFind(n: Int)","blue.bluejam.algorithms.kotlin.datastructure.UnionFind.UnionFind"]},{"name":"fun extendedEuclideanAlgorithm(x: Long, y: Long): Triple<Long, Long, Long>","description":"blue.bluejam.algorithms.kotlin.math.extendedEuclideanAlgorithm","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math/extended-euclidean-algorithm.html","searchKeys":["extendedEuclideanAlgorithm","fun extendedEuclideanAlgorithm(x: Long, y: Long): Triple<Long, Long, Long>","blue.bluejam.algorithms.kotlin.math.extendedEuclideanAlgorithm"]},{"name":"fun factorize(n: Long): List<Pair<Long, Long>>","description":"blue.bluejam.algorithms.kotlin.math.factorize","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math/factorize.html","searchKeys":["factorize","fun factorize(n: Long): List<Pair<Long, Long>>","blue.bluejam.algorithms.kotlin.math.factorize"]},{"name":"fun find(x: Int): Int","description":"blue.bluejam.algorithms.kotlin.datastructure.UnionFind.find","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.datastructure/-union-find/find.html","searchKeys":["find","fun find(x: Int): Int","blue.bluejam.algorithms.kotlin.datastructure.UnionFind.find"]},{"name":"fun get(i: Long): Boolean","description":"blue.bluejam.algorithms.kotlin.math.SieveOfEratosthenes.get","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math/-sieve-of-eratosthenes/get.html","searchKeys":["get","fun get(i: Long): Boolean","blue.bluejam.algorithms.kotlin.math.SieveOfEratosthenes.get"]},{"name":"fun getCardinalityOf(x: Int): Long","description":"blue.bluejam.algorithms.kotlin.datastructure.UnionFind.getCardinalityOf","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.datastructure/-union-find/get-cardinality-of.html","searchKeys":["getCardinalityOf","fun getCardinalityOf(x: Int): Long","blue.bluejam.algorithms.kotlin.datastructure.UnionFind.getCardinalityOf"]},{"name":"fun initialize(initList: List<T>)","description":"blue.bluejam.algorithms.kotlin.datastructure.SegmentTree.initialize","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.datastructure/-segment-tree/initialize.html","searchKeys":["initialize","fun initialize(initList: List<T>)","blue.bluejam.algorithms.kotlin.datastructure.SegmentTree.initialize"]},{"name":"fun inv(): ModInt","description":"blue.bluejam.algorithms.kotlin.math.ModInt.inv","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math/-mod-int/inv.html","searchKeys":["inv","fun inv(): ModInt","blue.bluejam.algorithms.kotlin.math.ModInt.inv"]},{"name":"fun lcm(x: Long, y: Long): Long","description":"blue.bluejam.algorithms.kotlin.math.lcm","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math/lcm.html","searchKeys":["lcm","fun lcm(x: Long, y: Long): Long","blue.bluejam.algorithms.kotlin.math.lcm"]},{"name":"fun pow(k: Long): ModInt","description":"blue.bluejam.algorithms.kotlin.math.ModInt.pow","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math/-mod-int/pow.html","searchKeys":["pow","fun pow(k: Long): ModInt","blue.bluejam.algorithms.kotlin.math.ModInt.pow"]},{"name":"fun query(a: Int, b: Int): T","description":"blue.bluejam.algorithms.kotlin.datastructure.SegmentTree.query","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.datastructure/-segment-tree/query.html","searchKeys":["query","fun query(a: Int, b: Int): T","blue.bluejam.algorithms.kotlin.datastructure.SegmentTree.query"]},{"name":"fun same(x: Int, y: Int): Boolean","description":"blue.bluejam.algorithms.kotlin.datastructure.UnionFind.same","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.datastructure/-union-find/same.html","searchKeys":["same","fun same(x: Int, y: Int): Boolean","blue.bluejam.algorithms.kotlin.datastructure.UnionFind.same"]},{"name":"fun unite(x: Int, y: Int): Boolean","description":"blue.bluejam.algorithms.kotlin.datastructure.UnionFind.unite","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.datastructure/-union-find/unite.html","searchKeys":["unite","fun unite(x: Int, y: Int): Boolean","blue.bluejam.algorithms.kotlin.datastructure.UnionFind.unite"]},{"name":"fun update(index: Int, v: T)","description":"blue.bluejam.algorithms.kotlin.datastructure.SegmentTree.update","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.datastructure/-segment-tree/update.html","searchKeys":["update","fun update(index: Int, v: T)","blue.bluejam.algorithms.kotlin.datastructure.SegmentTree.update"]},{"name":"fun valueOf(value: Long): ModInt","description":"blue.bluejam.algorithms.kotlin.math.ModInt.Factory.valueOf","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math/-mod-int/-factory/value-of.html","searchKeys":["valueOf","fun valueOf(value: Long): ModInt","blue.bluejam.algorithms.kotlin.math.ModInt.Factory.valueOf"]},{"name":"inline fun <T : Comparable<T>> bellmanFord(g: Graph<T>, s: Int): Triple<Array<T>, IntArray, Boolean>","description":"blue.bluejam.algorithms.kotlin.graph.bellmanFord","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.graph/bellman-ford.html","searchKeys":["bellmanFord","inline fun <T : Comparable<T>> bellmanFord(g: Graph<T>, s: Int): Triple<Array<T>, IntArray, Boolean>","blue.bluejam.algorithms.kotlin.graph.bellmanFord"]},{"name":"inline fun <T : Comparable<T>> bellmanFord(g: Graph<T>, s: Int, t: Int): Triple<Array<T>, IntArray, Boolean>","description":"blue.bluejam.algorithms.kotlin.graph.bellmanFord","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.graph/bellman-ford.html","searchKeys":["bellmanFord","inline fun <T : Comparable<T>> bellmanFord(g: Graph<T>, s: Int, t: Int): Triple<Array<T>, IntArray, Boolean>","blue.bluejam.algorithms.kotlin.graph.bellmanFord"]},{"name":"inline fun <T : Comparable<T>> dijkstra(g: Graph<T>, s: Int): Pair<Array<T>, IntArray>","description":"blue.bluejam.algorithms.kotlin.graph.dijkstra","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.graph/dijkstra.html","searchKeys":["dijkstra","inline fun <T : Comparable<T>> dijkstra(g: Graph<T>, s: Int): Pair<Array<T>, IntArray>","blue.bluejam.algorithms.kotlin.graph.dijkstra"]},{"name":"object Companion","description":"blue.bluejam.algorithms.kotlin.string.SuffixArray.Companion","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.string/-suffix-array/-companion/index.html","searchKeys":["Companion","object Companion","blue.bluejam.algorithms.kotlin.string.SuffixArray.Companion"]},{"name":"open operator override fun compareTo(other: Edge<T>): Int","description":"blue.bluejam.algorithms.kotlin.graph.Edge.compareTo","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.graph/-edge/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Edge<T>): Int","blue.bluejam.algorithms.kotlin.graph.Edge.compareTo"]},{"name":"operator fun div(other: Long): ModInt","description":"blue.bluejam.algorithms.kotlin.math.ModInt.div","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math/-mod-int/div.html","searchKeys":["div","operator fun div(other: Long): ModInt","blue.bluejam.algorithms.kotlin.math.ModInt.div"]},{"name":"operator fun div(other: ModInt): ModInt","description":"blue.bluejam.algorithms.kotlin.math.ModInt.div","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math/-mod-int/div.html","searchKeys":["div","operator fun div(other: ModInt): ModInt","blue.bluejam.algorithms.kotlin.math.ModInt.div"]},{"name":"operator fun get(n: Long, m: Long): ModInt","description":"blue.bluejam.algorithms.kotlin.math.combinatorics.ModCombination.get","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math.combinatorics/-mod-combination/get.html","searchKeys":["get","operator fun get(n: Long, m: Long): ModInt","blue.bluejam.algorithms.kotlin.math.combinatorics.ModCombination.get"]},{"name":"operator fun minus(other: Long): ModInt","description":"blue.bluejam.algorithms.kotlin.math.ModInt.minus","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math/-mod-int/minus.html","searchKeys":["minus","operator fun minus(other: Long): ModInt","blue.bluejam.algorithms.kotlin.math.ModInt.minus"]},{"name":"operator fun minus(other: ModInt): ModInt","description":"blue.bluejam.algorithms.kotlin.math.ModInt.minus","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math/-mod-int/minus.html","searchKeys":["minus","operator fun minus(other: ModInt): ModInt","blue.bluejam.algorithms.kotlin.math.ModInt.minus"]},{"name":"operator fun plus(other: Long): ModInt","description":"blue.bluejam.algorithms.kotlin.math.ModInt.plus","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math/-mod-int/plus.html","searchKeys":["plus","operator fun plus(other: Long): ModInt","blue.bluejam.algorithms.kotlin.math.ModInt.plus"]},{"name":"operator fun plus(other: ModInt): ModInt","description":"blue.bluejam.algorithms.kotlin.math.ModInt.plus","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math/-mod-int/plus.html","searchKeys":["plus","operator fun plus(other: ModInt): ModInt","blue.bluejam.algorithms.kotlin.math.ModInt.plus"]},{"name":"operator fun times(other: Long): ModInt","description":"blue.bluejam.algorithms.kotlin.math.ModInt.times","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math/-mod-int/times.html","searchKeys":["times","operator fun times(other: Long): ModInt","blue.bluejam.algorithms.kotlin.math.ModInt.times"]},{"name":"operator fun times(other: ModInt): ModInt","description":"blue.bluejam.algorithms.kotlin.math.ModInt.times","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math/-mod-int/times.html","searchKeys":["times","operator fun times(other: ModInt): ModInt","blue.bluejam.algorithms.kotlin.math.ModInt.times"]},{"name":"operator fun unaryMinus(): ModInt","description":"blue.bluejam.algorithms.kotlin.math.ModInt.unaryMinus","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math/-mod-int/unary-minus.html","searchKeys":["unaryMinus","operator fun unaryMinus(): ModInt","blue.bluejam.algorithms.kotlin.math.ModInt.unaryMinus"]},{"name":"tailrec fun gcd(x: Long, y: Long): Long","description":"blue.bluejam.algorithms.kotlin.math.gcd","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math/gcd.html","searchKeys":["gcd","tailrec fun gcd(x: Long, y: Long): Long","blue.bluejam.algorithms.kotlin.math.gcd"]},{"name":"val e: T","description":"blue.bluejam.algorithms.kotlin.datastructure.SegmentTree.e","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.datastructure/-segment-tree/e.html","searchKeys":["e","val e: T","blue.bluejam.algorithms.kotlin.datastructure.SegmentTree.e"]},{"name":"val edges: Array<ArrayList<Edge<T>>>","description":"blue.bluejam.algorithms.kotlin.graph.Graph.edges","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.graph/-graph/edges.html","searchKeys":["edges","val edges: Array<ArrayList<Edge<T>>>","blue.bluejam.algorithms.kotlin.graph.Graph.edges"]},{"name":"val from: Int","description":"blue.bluejam.algorithms.kotlin.graph.Edge.from","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.graph/-edge/from.html","searchKeys":["from","val from: Int","blue.bluejam.algorithms.kotlin.graph.Edge.from"]},{"name":"val inf: T","description":"blue.bluejam.algorithms.kotlin.graph.Graph.inf","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.graph/-graph/inf.html","searchKeys":["inf","val inf: T","blue.bluejam.algorithms.kotlin.graph.Graph.inf"]},{"name":"val lcp: IntArray","description":"blue.bluejam.algorithms.kotlin.string.SuffixArray.lcp","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.string/-suffix-array/lcp.html","searchKeys":["lcp","val lcp: IntArray","blue.bluejam.algorithms.kotlin.string.SuffixArray.lcp"]},{"name":"val length: Int","description":"blue.bluejam.algorithms.kotlin.string.SuffixArray.length","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.string/-suffix-array/length.html","searchKeys":["length","val length: Int","blue.bluejam.algorithms.kotlin.string.SuffixArray.length"]},{"name":"val mod: Long","description":"blue.bluejam.algorithms.kotlin.math.ModInt.Factory.mod","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math/-mod-int/-factory/mod.html","searchKeys":["mod","val mod: Long","blue.bluejam.algorithms.kotlin.math.ModInt.Factory.mod"]},{"name":"val mod: Long","description":"blue.bluejam.algorithms.kotlin.math.ModInt.mod","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math/-mod-int/mod.html","searchKeys":["mod","val mod: Long","blue.bluejam.algorithms.kotlin.math.ModInt.mod"]},{"name":"val n: Int","description":"blue.bluejam.algorithms.kotlin.graph.Graph.n","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.graph/-graph/n.html","searchKeys":["n","val n: Int","blue.bluejam.algorithms.kotlin.graph.Graph.n"]},{"name":"val n: Long","description":"blue.bluejam.algorithms.kotlin.math.combinatorics.ModCombination.n","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math.combinatorics/-mod-combination/n.html","searchKeys":["n","val n: Long","blue.bluejam.algorithms.kotlin.math.combinatorics.ModCombination.n"]},{"name":"val one: ModInt","description":"blue.bluejam.algorithms.kotlin.math.ModInt.Factory.one","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math/-mod-int/-factory/one.html","searchKeys":["one","val one: ModInt","blue.bluejam.algorithms.kotlin.math.ModInt.Factory.one"]},{"name":"val op: (T, T) -> T","description":"blue.bluejam.algorithms.kotlin.datastructure.SegmentTree.op","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.datastructure/-segment-tree/op.html","searchKeys":["op","val op: (T, T) -> T","blue.bluejam.algorithms.kotlin.datastructure.SegmentTree.op"]},{"name":"val plus: (T, T) -> T","description":"blue.bluejam.algorithms.kotlin.graph.Graph.plus","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.graph/-graph/plus.html","searchKeys":["plus","val plus: (T, T) -> T","blue.bluejam.algorithms.kotlin.graph.Graph.plus"]},{"name":"val primes: List<Long>","description":"blue.bluejam.algorithms.kotlin.math.SieveOfEratosthenes.primes","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math/-sieve-of-eratosthenes/primes.html","searchKeys":["primes","val primes: List<Long>","blue.bluejam.algorithms.kotlin.math.SieveOfEratosthenes.primes"]},{"name":"val rank: IntArray","description":"blue.bluejam.algorithms.kotlin.string.SuffixArray.rank","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.string/-suffix-array/rank.html","searchKeys":["rank","val rank: IntArray","blue.bluejam.algorithms.kotlin.string.SuffixArray.rank"]},{"name":"val s: String","description":"blue.bluejam.algorithms.kotlin.string.SuffixArray.s","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.string/-suffix-array/s.html","searchKeys":["s","val s: String","blue.bluejam.algorithms.kotlin.string.SuffixArray.s"]},{"name":"val sa: IntArray","description":"blue.bluejam.algorithms.kotlin.string.SuffixArray.sa","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.string/-suffix-array/sa.html","searchKeys":["sa","val sa: IntArray","blue.bluejam.algorithms.kotlin.string.SuffixArray.sa"]},{"name":"val size: Int","description":"blue.bluejam.algorithms.kotlin.datastructure.SegmentTree.size","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.datastructure/-segment-tree/size.html","searchKeys":["size","val size: Int","blue.bluejam.algorithms.kotlin.datastructure.SegmentTree.size"]},{"name":"val size: Int","description":"blue.bluejam.algorithms.kotlin.datastructure.UnionFind.size","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.datastructure/-union-find/size.html","searchKeys":["size","val size: Int","blue.bluejam.algorithms.kotlin.datastructure.UnionFind.size"]},{"name":"val to: Int","description":"blue.bluejam.algorithms.kotlin.graph.Edge.to","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.graph/-edge/to.html","searchKeys":["to","val to: Int","blue.bluejam.algorithms.kotlin.graph.Edge.to"]},{"name":"val two: ModInt","description":"blue.bluejam.algorithms.kotlin.math.ModInt.Factory.two","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math/-mod-int/-factory/two.html","searchKeys":["two","val two: ModInt","blue.bluejam.algorithms.kotlin.math.ModInt.Factory.two"]},{"name":"val value: Long","description":"blue.bluejam.algorithms.kotlin.math.ModInt.value","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math/-mod-int/value.html","searchKeys":["value","val value: Long","blue.bluejam.algorithms.kotlin.math.ModInt.value"]},{"name":"val weight: T","description":"blue.bluejam.algorithms.kotlin.graph.Edge.weight","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.graph/-edge/weight.html","searchKeys":["weight","val weight: T","blue.bluejam.algorithms.kotlin.graph.Edge.weight"]},{"name":"val zero: ModInt","description":"blue.bluejam.algorithms.kotlin.math.ModInt.Factory.zero","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.math/-mod-int/-factory/zero.html","searchKeys":["zero","val zero: ModInt","blue.bluejam.algorithms.kotlin.math.ModInt.Factory.zero"]},{"name":"val zero: T","description":"blue.bluejam.algorithms.kotlin.graph.Graph.zero","location":"kotlin-algorithm-snippets/blue.bluejam.algorithms.kotlin.graph/-graph/zero.html","searchKeys":["zero","val zero: T","blue.bluejam.algorithms.kotlin.graph.Graph.zero"]}]
